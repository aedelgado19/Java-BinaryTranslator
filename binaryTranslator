/*
 * Author: Ally Delgado
 * Date: September 16, 2019
 * BinaryTranslator asks user whether they are entering a file or number,
 * if file/number is a decimal, it converts it to binary and vice versa
 *
 */

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class FinalBinaryTranslator {
	public static void main(String[] args) {
    	
    	// ask user what their file or number is
    	
    	System.out.print("Type \"file\" to enter a file or type \"input\" to use the console. ");
    	//create new scanner called scanner
    	Scanner scanner = new Scanner(System.in);
    	//variable declarations
    	String OriginalInput = scanner.nextLine();
    	String FileContent;
    	String NumberInput;
    	String DecimalOrBinary="";
    	int IntegerFormOfInput = 0;
    	int IntegerFormOfFile = 0;
    	char ch = '0';
    	if (OriginalInput.equals("file")) { //User enters file
        	
    		//find file
        	try {
            	System.out.println("Enter your file name");
            	OriginalInput = scanner.nextLine();
            	
            	//scan file and put store it as an int
            	Scanner FileScanner = new Scanner(new File(OriginalInput));
            	FileContent = FileScanner.nextLine();
            	IntegerFormOfFile = Integer.parseInt(FileContent);
            	
            	//call to function that makes decimal into binary
            	DecToBin(IntegerFormOfFile);  
            
            	
        	} catch (IOException ex) { //if file doesn't exist, display error message
            	System.out.print("File not found.");
            	System.exit(1);
        	}
    	
        	
    	}
    	
    	else { //input from console
        	
        	
        	// ask if they want binary -> decimal or decimal -> binary
        	System.out.println("Type \"d\" for binary into decimal");
        	System.out.println("Type \"b\" for decimal to binary");
        	DecimalOrBinary = scanner.nextLine();
        	
            	//if answer is D (input=binary, translate into decimal) do this:
            	if (DecimalOrBinary.equals("d")){
            		String BinaryInput; 
            		double RunningTotal = 0.0;
            		int exponent;
            		int BinIndex = 0;
            		double BinArray[] = new double[17];
            		
            		//user enters binary code
            		System.out.println("Enter binary code here: ");
            		BinaryInput = scanner.nextLine();
            		int StringLength = BinaryInput.length();
            		int j = (StringLength-1);
            		
            		
            		//create an array to store exponent values
            		for(exponent =0; exponent <= 16; exponent++) {
            			BinArray[BinIndex] = Math.pow(2, exponent);
            			BinIndex++; 
            		}        
            		
            			
            		// while binary index is less than string length, and if the char in string is 1, add its value to total
	            		BinIndex = 0;
	            		j = StringLength-1;
	            		while (BinIndex < StringLength) {
	            			ch = BinaryInput.charAt(BinIndex);
	            			if (ch == '1'){
	            				RunningTotal = RunningTotal + BinArray[j];
	            			}
	            			//scan through rest of string by increasing bin index and decreasing j (placeholder for stringlength-1)
	            			BinIndex++;
	            			j--;
	            			
	            		}
            		System.out.println(RunningTotal);
            				
            		}
            		
            	}
         
            	
            	//otherwise (if answer is B), do this
            	if (DecimalOrBinary.equals("b")) {
            		System.out.print("Enter a number: ");
                	NumberInput = scanner.nextLine();
                	IntegerFormOfInput = Integer.parseInt(NumberInput);
            		DecToBin(IntegerFormOfInput);
            	}	
            	
            	scanner.close();
    	}
	
            	
	
	//function that makes decimals into binary
   public static void DecToBin(int IntegerFormOfFile) {
    	 
	   				double powerArray[] = new double[17];
	   				boolean LeftZeroes = false;
            		int exponent;
                	int index=0;
                	double remainder = 0.0;
                	String binary;
                	
                	//start an array to store exponent values for binary
                	for(exponent =16; exponent >= 0; exponent--) {
                	 powerArray[index] = Math.pow(2, exponent);
                	
                	 index++;                	 
      	
                	}
                	
                	//re-initialize index as 0 and declare a remainder
                	index=0;
                	remainder = IntegerFormOfFile;
                	
                	
	                	//print out 0's and 1's
	                	while (index <17) {
	                		if (powerArray[index] <= remainder) {
	                			//don't print left zeroes
	                			LeftZeroes = true;
	                			remainder = remainder-powerArray[index];
	                			System.out.print("1");
	
	                		}
	                		
	                		
	                		else {
	                			if (LeftZeroes == true) {
	                				System.out.print("0");
	                			}
	                			
	                		}
	                		
	                		index++;
	             	
	                	}	
    }
	
}
